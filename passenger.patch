diff --git a/build/packaging.rb b/build/packaging.rb
index 7ef3db32b..ad13766ce 100644
--- a/build/packaging.rb
+++ b/build/packaging.rb
@@ -115,7 +115,7 @@ def change_shebang(filename, value)
 end
 
 desc "Create a fakeroot, useful for building native packages"
-task :fakeroot => [:apache2, :nginx, 'nginx:as_dynamic_module', :doc] do
+task :fakeroot => [AGENT_TARGET, NATIVE_SUPPORT_TARGET, :doc] do
   require 'rbconfig'
   include RbConfig
 
@@ -180,8 +180,8 @@ def change_shebang(filename, value)
   sh "mkdir -p #{fake_libdir}"
   sh "cp -R #{COMMON_OUTPUT_DIR} #{fake_libdir}/"
   sh "rm -rf #{fake_libdir}/common/libboost_oxt"
-  sh "cp -R #{NGINX_DYNAMIC_OUTPUT_DIR} #{fake_libdir}/"
-  sh "rm -rf #{fake_libdir}/nginx_dynamic/libboost_oxt"
+  #sh "cp -R #{NGINX_DYNAMIC_OUTPUT_DIR} #{fake_libdir}/"
+  #sh "rm -rf #{fake_libdir}/nginx_dynamic/libboost_oxt"
 
   # Ruby extension binaries
   sh "mkdir -p #{fake_native_support_dir}"
@@ -204,37 +204,37 @@ def change_shebang(filename, value)
   sh "mkdir -p #{fake_resources_dir}"
   sh "cp -R resources/* #{fake_resources_dir}/"
 
-  # Headers necessary for building the Nginx module
-  sh "mkdir -p #{fake_include_dir}"
-  # Infer headers that the Nginx module needs
-  headers = []
-  Dir["src/nginx_module/**/*.[ch]"].each do |filename|
-    File.read(filename).split("\n").grep(%r{#include "cxx_supportlib/(.+)"}) do |match|
-      headers << ["src/cxx_supportlib/#{$1}", "cxx_supportlib/#{$1}"]
-    end
-  end
-  # Manually add headers that could not be inferred through
-  # the above code
-  headers.concat([
-    ["src/cxx_supportlib/Exceptions.h", "cxx_supportlib/Exceptions.h"],
-    ["src/cxx_supportlib/AppTypeDetector/CBindings.h", "cxx_supportlib/AppTypeDetector/CBindings.h"],
-    ["src/cxx_supportlib/WrapperRegistry/CBindings.h", "cxx_supportlib/WrapperRegistry/CBindings.h"],
-    ["src/cxx_supportlib/JsonTools/CBindings.h", "cxx_supportlib/JsonTools/CBindings.h"],
-    ["src/cxx_supportlib/vendor-modified/modp_b64.h", "cxx_supportlib/vendor-modified/modp_b64.h"],
-    ["src/cxx_supportlib/vendor-modified/modp_b64_data.h", "cxx_supportlib/vendor-modified/modp_b64_data.h"]
-  ])
-  headers.each do |header|
-    target = "#{fake_include_dir}/#{header[1]}"
-    dir = File.dirname(target)
-    if !File.directory?(dir)
-      sh "mkdir -p #{dir}"
-    end
-    sh "cp #{header[0]} #{target}"
-  end
+  # # Headers necessary for building the Nginx module
+  # sh "mkdir -p #{fake_include_dir}"
+  # # Infer headers that the Nginx module needs
+  # headers = []
+  # Dir["src/nginx_module/**/*.[ch]"].each do |filename|
+  #   File.read(filename).split("\n").grep(%r{#include "cxx_supportlib/(.+)"}) do |match|
+  #     headers << ["src/cxx_supportlib/#{$1}", "cxx_supportlib/#{$1}"]
+  #   end
+  # end
+  # # Manually add headers that could not be inferred through
+  # # the above code
+  # headers.concat([
+  #   ["src/cxx_supportlib/Exceptions.h", "cxx_supportlib/Exceptions.h"],
+  #   ["src/cxx_supportlib/AppTypeDetector/CBindings.h", "cxx_supportlib/AppTypeDetector/CBindings.h"],
+  #   ["src/cxx_supportlib/WrapperRegistry/CBindings.h", "cxx_supportlib/WrapperRegistry/CBindings.h"],
+  #   ["src/cxx_supportlib/JsonTools/CBindings.h", "cxx_supportlib/JsonTools/CBindings.h"],
+  #   ["src/cxx_supportlib/vendor-modified/modp_b64.h", "cxx_supportlib/vendor-modified/modp_b64.h"],
+  #   ["src/cxx_supportlib/vendor-modified/modp_b64_data.h", "cxx_supportlib/vendor-modified/modp_b64_data.h"]
+  # ])
+  # headers.each do |header|
+  #   target = "#{fake_include_dir}/#{header[1]}"
+  #   dir = File.dirname(target)
+  #   if !File.directory?(dir)
+  #     sh "mkdir -p #{dir}"
+  #   end
+  #   sh "cp #{header[0]} #{target}"
+  # end
 
-  # Nginx module sources
-  sh "mkdir -p #{fake_nginx_module_source_dir}"
-  sh "cp -R src/nginx_module/* #{fake_nginx_module_source_dir}/"
+  # # Nginx module sources
+  # sh "mkdir -p #{fake_nginx_module_source_dir}"
+  # sh "cp -R src/nginx_module/* #{fake_nginx_module_source_dir}/"
 
   # Documentation
   sh "mkdir -p #{fake_docdir}"
@@ -264,9 +264,9 @@ def change_shebang(filename, value)
     change_shebang("#{fake_sbindir}/#{exe}", shebang)
   end
 
-  # Apache 2 module
-  sh "mkdir -p #{File.dirname(fake_apache2_module_path)}"
-  sh "cp #{APACHE2_TARGET} #{fake_apache2_module_path}"
+  # # Apache 2 module
+  # sh "mkdir -p #{File.dirname(fake_apache2_module_path)}"
+  # sh "cp #{APACHE2_TARGET} #{fake_apache2_module_path}"
 
   # Ruby extension sources
   sh "mkdir -p #{fake_ruby_extension_source_dir}"
@@ -285,9 +285,9 @@ def change_shebang(filename, value)
     f.puts "doc_dir=#{psg_docdir}"
     f.puts "ruby_libdir=#{psg_rubylibdir}"
     f.puts "node_libdir=#{psg_nodelibdir}"
-    f.puts "apache2_module_path=#{psg_apache2_module_path}"
+    f.puts "apache2_module_path="
     f.puts "ruby_extension_source_dir=#{psg_ruby_extension_source_dir}"
-    f.puts "nginx_module_source_dir=#{psg_nginx_module_source_dir}"
+    f.puts "nginx_module_source_dir="
   end
 
   # Sanity check the locations.ini file
@@ -298,5 +298,10 @@ def change_shebang(filename, value)
     end
   end
 
+  # Extra custom cleanup
+  sh "rm -rf #{fake_bindir}/*install*"
+  sh "strip --strip-all #{fake_support_binaries_dir}/*"
+  sh "find #{fakeroot} -type f -name *.so -exec strip --strip-all {} \\;"
+
   sh "find #{fakeroot} -name .DS_Store -print0 | xargs -0 rm -f"
 end
